function Board.new 3
push constant 1
call Memory.alloc 1
pop pointer 0
push constant 8
call Array.new 1
pop this 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 8
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
push local 0
push this 0
add
push constant 8
call Array.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 2
label WHILE_EXP1
push local 1
push constant 8
lt
not
if-goto WHILE_END1
push local 1
push local 2
add
call Grid.new 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push this 0
add
push local 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
return
function Board.printBoard 4
push argument 0
pop pointer 0
call Draw.printLines 0
pop temp 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 8
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 3
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push constant 8
lt
not
if-goto WHILE_END1
push local 1
push local 3
add
pop pointer 1
push that 0
pop local 2
push local 2
call Grid.status 1
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push local 1
call Draw.place_white 2
pop temp 0
label IF_FALSE0
push local 2
call Grid.status 1
push constant 1
neg
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push local 1
call Draw.place_black 2
pop temp 0
label IF_FALSE1
push local 2
call Grid.available 1
push constant 0
not
eq
push local 2
call Grid.status 1
push constant 0
eq
and
push argument 1
push constant 1
eq
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
push local 1
call Draw.draw_white_available 2
pop temp 0
label IF_FALSE2
push local 2
call Grid.available 1
push constant 0
not
eq
push local 2
call Grid.status 1
push constant 0
eq
and
push argument 1
push constant 1
neg
eq
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
push local 1
call Draw.draw_black_available 2
pop temp 0
label IF_FALSE3
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.getGrid 2
push argument 0
pop pointer 0
push argument 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push argument 2
push local 0
add
pop pointer 1
push that 0
pop local 1
push local 1
return
function Board.putGrid 1
push argument 0
pop pointer 0
push argument 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push argument 2
push local 0
add
push argument 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 1
push this 0
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Board.putting 2
push argument 0
pop pointer 0
push argument 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push argument 2
push local 0
add
pop pointer 1
push that 0
pop local 1
push local 1
push argument 3
call Grid.place 2
pop temp 0
push argument 2
push local 0
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 1
push this 0
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Board.changing 2
push argument 0
pop pointer 0
push argument 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push argument 2
push local 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call Grid.reverse 1
pop temp 0
push argument 2
push local 0
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 1
push this 0
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Board.makeGridAvailable 2
push argument 0
pop pointer 0
push argument 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push argument 2
push local 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call Grid.makeAvailable 1
pop temp 0
push argument 2
push local 0
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 1
push this 0
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Board.makeGridUnavailable 2
push argument 0
pop pointer 0
push argument 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push argument 2
push local 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call Grid.makeUnavailable 1
pop temp 0
push argument 2
push local 0
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 1
push this 0
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Board.setWeight 2
push argument 0
pop pointer 0
push argument 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push argument 2
push local 0
add
pop pointer 1
push that 0
pop local 1
push local 1
push argument 3
call Grid.writeWeight 2
pop temp 0
push argument 2
push local 0
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 1
push this 0
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Board.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
